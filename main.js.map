{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/display.js","webpack:///./src/index.js","webpack:///./src/item.js","webpack:///./src/jmUtils.js","webpack:///./src/project.js","webpack:///./src/ui.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAkC;AACV;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,GAAG,GAAG,GAAG,GAAG,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;;AAEA;AACA;AACA,iDAAiD,OAAO;AACxD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD,QAAQ;AACR,gDAAgD,OAAO;;AAEvD;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,yCAAyC,8CAAE;AAC3C;AACA;AACA;AACA;AACA,yCAAyC,8CAAE;AAC3C;AACA;AACA;AACA;AACA,yCAAyC,8CAAE;AAC3C;AACA;AACA;AACA;AACA,yCAAyC,8CAAE;AAC3C;AACA;AACA;AACA;AACA,gBAAgB,mDAAO;AACvB,gBAAgB,mDAAO;AACvB;;AAEA;AACA,IAAI,mDAAO;;AAEX;AACA;AACA;AACA;AACA;AACA,CAAC;AACc,sEAAO;;;;;;;;;;;;;AC7FtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;AACoB;AACE;AACA;AACV;AACU;;AAElC;AACA;AACA;AACA,EAAE,mDAAO;AACT,CAAC;AACD,eAAe,qDAAI;;AAEnB,gBAAgB,qDAAI;;AAEpB,gBAAgB,qDAAI;;AAEpB,yBAAyB,mDAAO;;AAEhC;;AAEA,EAAE,mDAAO;AACT;AACA,mDAAO;;AAEP;AACA;AACA,6BAA6B,8CAAE;;AAE/B,kEAAkE,8CAAE;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iEAAiE;AACxE;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;;;;;;;;;;;;;ACtFf;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEe,sEAAO;;;;;;;;;;;;;ACbtB;AAAA;AAAgC;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,SAAS,QAAQ;AACzE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,+CAA+C,iBAAiB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACc,sEAAO;;;;;;;;;;;;;AClHtB;AAAA;AAAA;AAAA;AAAkC;AACF;AACE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK,GAAG,GAAG,GAAG,GAAG;AAC/B;;AAEA;AACA;AACA;AACA;AACA,MAAM,mDAAO;AACb,MAAM,mDAAO;;AAEb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAI;AAC1B,MAAM,mDAAO;AACb,MAAM,mDAAO;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,mDAAO;AACb,MAAM,mDAAO;AACb,KAAK;AACL;AACA;AACA,MAAM,mDAAO;AACb,MAAM,mDAAO;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,mDAAO;AACX,IAAI,mDAAO;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mDAAO;AACxB;AACA;AACA;AACA,IAAI,mDAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU,IAAI;AACtD,yCAAyC,KAAK,gBAAgB,MAAM;AACpE,yCAAyC,KAAK;AAC9C,oDAAoD,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,mDAAO,aAAa,mDAAO;AAC/B;AACA;AACA;AACA;AACA,IAAI,mDAAO;AACX,IAAI,mDAAO;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAEc,iEAAE","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Project from './project.js'\nimport UI from './ui.js'\n\nconst displayFormat = (value, type, listID) => {\n  switch (type) {\n    case 'date':\n      const dd = value.getDate()\n      const mm = value.getMonth() + 1\n      const yy = value\n        .getFullYear()\n        .toString()\n        .substr(-2)\n      return `${dd}-${mm}-${yy}`\n    case 'number':\n      return value\n    case 'checkbox':\n      const checked = value ? 'checked' : ''\n      return `\n              <input type=\"checkbox\" ${checked} class=\"completed-checkbox\">\n              `\n\n    case 'button':\n      return `\n              <button class=\"select-btn select-${listID}\">\n              ${value}\n              </button>\n              `\n    default:\n      return value\n  }\n}\nconst Display = (() => {\n  const displayList = (list, listID) => {\n    const listElement = document.getElementById(listID)\n    if (list.length === 0) {\n      listElement.innerHTML = ''\n    }\n    let listHTML = list.reduce((accumulator, item) => {\n      let itemHTML = item.propsForDisplay().reduce(\n        (accu, entry) =>\n          accu +\n          ` <span class =\"${entry.class}\">\n                  ${displayFormat(entry.prop, entry.type, listID)}\n                  </span>`,\n        ''\n      )\n      return (\n        accumulator +\n        `<li>\n      <button class=\"edit-btn round-btn edit-${listID}\">âœŽ</button>\n      ${itemHTML}\n      <button class=\"delete-btn round-btn del-${listID}\">-</button>\n\n      </li>`\n      )\n    }, '')\n\n    listElement.innerHTML = listHTML\n    Array.from(document.getElementsByClassName('delete-btn')).forEach(\n      button => {\n        button.addEventListener('click', UI.deleteButton)\n      }\n    )\n    Array.from(document.getElementsByClassName('select-btn')).forEach(\n      button => {\n        button.addEventListener('click', UI.selectButton)\n      }\n    )\n    Array.from(document.getElementsByClassName('edit-btn')).forEach(\n      button => {\n        button.addEventListener('click', UI.editButton)\n      }\n    )\n    Array.from(document.getElementsByClassName('completed-checkbox')).forEach(\n      button => {\n        button.addEventListener('click', UI.completeButton)\n      }\n    )\n  }\n  const refresh = (activeProject = 0) => {\n    displayList(Project.list, 'project-list')\n    displayList(Project.list[activeProject].listItems(), 'todo-list')\n    const allButtons = document.getElementsByClassName('select-project-list')\n\n    allButtons.item(activeProject).classList.add('active-btn')\n    Project.save()\n\n  }\n  return {\n    displayList,\n    refresh\n  }\n})()\nexport default Display\n","'use strict'\nimport { Item } from './item.js'\nimport Project from './project.js'\nimport Display from './display.js'\nimport UI from './ui.js'\nimport JMUtils from './jmUtils.js'\n\nconst projectList = localStorage.getObj('project-list')\nconsole.log(projectList)\nif (projectList) {\n  Project.load()\n} else {\n  const test = Item('Add items to your todo list', new Date('2020-02-01'))\n\n  const test2 = Item('Add another project', new Date('2020-03-01'))\n\n  const test3 = Item('test', new Date('2020-04-01'))\n\n  const defaultProject = Project.create('Default Project')\n\n  defaultProject.addItems([test, test2, test3])\n\n  Project.create('Test project')\n}\nDisplay.refresh()\n\ndocument\n  .getElementById('new-project-btn')\n  .addEventListener('click', UI.newButton)\n\ndocument.getElementById('new-todo-btn').addEventListener('click', UI.newButton)\n\nconsole.log(\n  document.getElementById('project-list').getElementsByClassName('select-btn')\n)\ndocument\n  .getElementById('project-list')\n  .getElementsByClassName('select-btn')\n  .item(0)\n  .classList.add('active-btn')\n","const Item = (__title = 'Item', _dueDate = null, _priority = 0) => {\n  let priority\n  let _title\n  let dueDate\n  let completed = false\n  const getCompleted = () => completed\n  const title = () => _title\n  const titleSet = __title => {\n    _title = __title\n  }\n  titleSet(__title)\n  const getPriority = () => {\n    return priority\n  }\n  const setPriority = priority_raw => {\n    priority = Math.max(Math.min(priority_raw, 10), 0)\n  }\n  setPriority(_priority)\n  const toggleComplete = () => {\n    completed = !completed\n  }\n\n  const getDueDate = () => {\n    return dueDate\n  }\n\n  const setDueDate = _dueDate => {\n    if (\n      _dueDate &&\n      Object.prototype.toString.call(_dueDate) === '[object Date]' &&\n      !isNaN(_dueDate)\n    ) {\n      console.log(_dueDate)\n      dueDate = _dueDate\n    } else {\n      dueDate = new Date()\n    }\n  }\n  setDueDate(_dueDate)\n  const getPropsForSave = () => {\n    return {\n      title: title(),\n      dueDate: getDueDate(),\n      priority: getPriority(),\n      completed: getCompleted()\n    }\n  }\n  const propsForDisplay = () => {\n    return [\n      { descr: 'Description', prop: title(), class: 'item-description' },\n      {\n        descr: 'Due Date',\n        prop: getDueDate(),\n        class: 'item-due-date',\n        type: 'date'\n      },\n      {\n        descr: 'Priority',\n        prop: getPriority(),\n        class: 'item-priority',\n        type: 'number'\n      },\n      {\n        descr: 'Completed?',\n        prop: getCompleted(),\n        class: 'item-completed',\n        type: 'checkbox'\n      }\n    ]\n  }\n  return {\n    getDueDate,\n    setDueDate,\n    getPriority,\n    setPriority,\n    get title () {\n      return _title\n    },\n    titleSet,\n    getCompleted,\n    toggleComplete,\n    propsForDisplay,\n    getPropsForSave\n  }\n}\n\nexport { Item }\n","// Usage: localStorage.setObj(key, obj)\nStorage.prototype.setObj = function (key, obj) {\n  return this.setItem(key, JSON.stringify(obj))\n}\n// Usage: let obj =  localStorage.getObj(key)\nStorage.prototype.getObj = function (key) {\n  return JSON.parse(this.getItem(key))\n}\n\nconst JMUtils = {\n\n}\n\nexport default JMUtils\n","import { Item } from './item.js'\nconst Project = (() => {\n  let projectList = []\n\n  const _create = (_name = 'A todo list') => {\n    let todos = []\n    let name = _name\n\n    const setName = _name => {\n      name = _name\n    }\n    const getName = () => {\n      return name\n    }\n\n    const addItem = item => {\n      todos.push(item)\n    }\n    const addItems = items => {\n      for (const index in items) {\n        addItem(items[index])\n      }\n    }\n    const listItems = () => {\n      return todos.map((item, order) => Object.assign({}, item, { order }))\n    }\n    const removeItemAt = index => {\n      let removedItem\n      ;[removedItem] = todos.splice(index, 1)\n      return removedItem\n    }\n    const getItemAt = order => Object.assign({}, todos[order], { order })\n    const replaceItemWith = item => {\n      todos[item.order] = item\n    }\n    const propsForDisplay = () => {\n      return [\n        {\n          descr: 'Number of Items',\n          class: 'project-number-items',\n          prop: todos.length,\n          readOnly: true\n        },\n        {\n          descr: 'Project Name',\n          class: 'project-name',\n          prop: name,\n          type: 'button'\n        }\n      ]\n    }\n\n    return {\n      setName,\n      getName,\n      addItem,\n      addItems,\n      listItems,\n      removeItemAt,\n      getItemAt,\n      replaceItemWith,\n      propsForDisplay\n    }\n  }\n\n  const create = name => {\n    const newProject = _create(name)\n    projectList.push(newProject)\n    return newProject\n  }\n  const removeListAt = index => {\n    return projectList.splice(index, 1)\n  }\n  const replaceList = list => {\n    projectList = list\n  }\n  const save = () => {\n    const saveProjectList = projectList.map(project => {\n      return {\n        todos: project.listItems().map(todo => {\n          return todo.getPropsForSave()\n        }),\n        name: project.getName()\n      }\n    })\n    localStorage.setObj('project-list', saveProjectList)\n    console.log(localStorage.getObj('project-list', projectList))\n  }\n  const load = () => {\n    const projectListPure = localStorage.getObj('project-list')\n    console.log(projectListPure)\n    projectList = projectListPure.map(project => {\n      const newProject = create(project.name)\n      project.todos.forEach(todo => {\n        let newTodo = Item(todo.title, new Date(todo.dueDate), todo.priority)\n        if (todo.completed) {\n          newTodo.toggleComplete()\n        }\n        newProject.addItem(newTodo)\n      })\n      return newProject\n    })\n  }\n  return {\n    create,\n    get list () {\n      return projectList\n    },\n    removeListAt,\n    replaceList,\n    save,\n    load\n  }\n})()\nexport default Project\n","import Project from './project.js'\nimport { Item } from './item.js'\nimport Display from './display.js'\nconst UI = (() => {\n  const getActiveList = () => {\n    const activeListButton = document\n      .getElementsByClassName('select-project-list active-btn')\n      .item(0)\n    return getIndex(activeListButton.parentElement)\n  }\n  const getCleanDate = value => {\n    const dd = ('0' + value.getDate()).substr(-2)\n    const mm = ('0' + (value.getMonth() + 1)).substr(-2)\n    const yyyy = value\n      .getFullYear()\n      .toString()\n      .substr(-4)\n    return `${yyyy}-${mm}-${dd}`\n  }\n\n  const newButton = event => {\n    const projectIndex = getActiveList()\n    if (event.target.id === 'new-project-btn') {\n      const projectName = document.getElementById('new-project-input').value\n      Project.create(projectName)\n      Display.refresh(projectIndex)\n\n    } else if (event.target.id === 'new-todo-btn') {\n      const name = document.getElementById('new-todo-name').value\n      const date = new Date(document.getElementById('new-todo-date').value)\n      const priority = parseInt(\n        document.getElementById('new-todo-priority').value\n      )\n      const newTodo = Item(name, date, priority)\n      Project.list[projectIndex].addItem(newTodo)\n      Display.refresh(projectIndex)\n    }\n  }\n\n  const getIndex = element => {\n    const liElement = element.parentElement\n    return [...liElement.parentNode.children].indexOf(liElement)\n  }\n\n  const deleteButton = event => {\n    const liProjectIndex = getActiveList()\n    if (event.target.classList.contains('del-project-list')) {\n      const liIndex = getIndex(event.target)\n      Project.removeListAt(liIndex)\n      Display.refresh(liProjectIndex)\n    } else if (event.target.classList.contains('del-todo-list')) {\n      // Find the active list\n      const liItemIndex = getIndex(event.target)\n      Project.list[liProjectIndex].removeItemAt(liItemIndex)\n      Display.refresh(liProjectIndex)\n    }\n  }\n\n  const saveName = event => {\n    let input = event.target\n    const projectIndex = parseInt(input.classList)\n    const projectName = input.value\n    Project.list[projectIndex].setName(projectName)\n    Display.refresh(projectIndex)\n  }\n\n  const saveDetails = () => {\n    const projectIndex = getActiveList()\n    const itemNum = parseInt(\n      document.getElementById('edit-todo-name').classList\n    )\n    const newName = document.getElementById('edit-todo-name').value\n    const newDueDate = new Date(\n      document.getElementById('edit-todo-date-name').value\n    )\n    const newPriority = parseInt(document.getElementById('edit-todo-priority-name').value)\n    const item = Project.list[projectIndex].listItems()[itemNum]\n    item.titleSet(newName)\n    item.setDueDate(newDueDate)\n    item.setPriority(newPriority)\n    Display.refresh(projectIndex)\n    window.removeEventListener('click', clickAnyWhere)\n  }\n  const clickAnyWhere = event => {\n    if (\n      !(event.target.parentElement)\n      ||\n      !(event.target.parentElement.children.item(1))\n      ||\n      (\n      event.target.id !== 'input-wrapper' &&\n      event.target.parentElement.id !== 'input-wrapper' &&\n      event.target.parentElement.children.item(1).id !== 'input-wrapper'\n    )\n    ) {\n      saveDetails()\n    }\n  }\n\n  const getEditElement = (liIndex, li, klass) => {\n    const element = li.parentElement.getElementsByClassName(klass).item(0)\n    return element\n  }\n\n  const replaceEditElement = (\n    type,\n    element,\n    index,\n    name,\n    inputType,\n    custom\n  ) => {\n    element.outerHTML = `<input type=\"${inputType}\" ${custom}\n                              id=\"edit-${type}-name\" class=\"${index}\"\n                              value = \"${name}\" >`\n    let inputName = document.getElementById(`edit-${type}-name`)\n    const functionCall = type === 'project' ? saveName : saveDetails\n    inputName.addEventListener('keyup', event => {\n      if (event.keyCode === 13) {\n        functionCall(event)\n      }\n    })\n    inputName.focus()\n    return inputName\n  }\n\n  const editButton = event => {\n    const button = event.target\n    const liIndex = getIndex(button)\n    if (button.classList.contains('edit-project-list')) {\n      let element = getEditElement(liIndex, button, 'select-project-list')\n      const projectName = Project.list[liIndex].getName()\n      const inputName = replaceEditElement(\n        'project',\n        element,\n        liIndex,\n        projectName,\n        'text',\n        'maxLength=\"18\" size=\"21\"'\n      )\n      inputName.addEventListener('focusout', saveName)\n    } else if (event.target.classList.contains('edit-todo-list')) {\n      // Find the active list\n      const liProjectIndex = getActiveList()\n\n      let _wrapper = getEditElement(liIndex, button, 'item-description')\n      _wrapper.outerHTML = '<span id=\"input-wrapper\"></span>'\n      let wrapper = document.getElementById('input-wrapper')\n      let _element = document.createElement('span')\n      wrapper.appendChild(_element)\n      _element.outerHTML = '<span id=\"input-placeholder\"></span>'\n      let element = document.getElementById('input-placeholder')\n      const todoItem = Project.list[liProjectIndex].listItems()[liIndex]\n      const todoName = todoItem.title\n      wrapper.appendChild(\n        replaceEditElement('todo', element, liIndex, todoName, 'text', 'maxLength=\"30\" size=\"33\"')\n      )\n\n      let dueDateElement = getEditElement(liIndex, button, 'item-due-date')\n      const dueDate = todoItem.getDueDate()\n      wrapper.appendChild(\n        replaceEditElement(\n          'todo-date',\n          dueDateElement,\n          liIndex,\n          getCleanDate(dueDate),\n          'date',\n          'size=\"7\"'\n        )\n      )\n      let priorityElement = getEditElement(liIndex, button, 'item-priority')\n      const priority = parseInt(todoItem.getPriority())\n      wrapper.appendChild(\n        replaceEditElement(\n          'todo-priority',\n          priorityElement,\n          liIndex,\n          priority,\n          'number',\n          ' min=\"0\" max=\"10\"'\n        )\n      )\n\n      window.addEventListener('click', clickAnyWhere)\n    }\n  }\n  const selectButton = event => {\n    if (event.target.classList.contains('active-btn')) return\n    const liIndex = getIndex(event.target.parentElement)\n    const allButtons = [\n      ...document.getElementsByClassName(event.target.className)\n    ]\n    allButtons.forEach(button => {\n      button.classList.remove('active-btn')\n    })\n    allButtons[liIndex].classList.add('active-btn')\n    Display.displayList(Project.list[liIndex].listItems(), 'todo-list')\n  }\n  const completeButton = (event) => {\n    const liIndex = getIndex(event.target.parentElement)\n    const projectIndex = getActiveList()\n    Project.list[projectIndex].listItems()[liIndex].toggleComplete()\n    Project.save()\n  }\n\n  return {\n    newButton,\n    deleteButton,\n    selectButton,\n    editButton,\n    completeButton\n\n  }\n})()\n\nexport default UI\n"],"sourceRoot":""}